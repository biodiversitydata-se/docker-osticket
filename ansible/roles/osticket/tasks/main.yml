- debug:
    var: swarm_deployment
- debug:
    var: standalone_deployment
- debug:
    var: development_deployment
- debug:
    var: osticket_version
- debug:
    var: server_name
- debug:
    var: domain
- debug:
    var: frontend_network

- debug:
    var: test_param

  
  
    
- name: Ensure configuration and script directories
  file:
    path: "{{ docker_ctx }}/{{item}}"
    mode: 0755
    state: directory
  with_items:
    - etc/osticket
    - etc/osticket/env
    - etc/osticket/db
    - etc/osticket/db/initdb.d
    - usr/osticket
    - usr/osticket/bin
    - var/volumes
    - var/volumes/osticket
    - var/backup
    - var/backup/osticket

- name: Ensure write access for docker group
  file:
    path: "{{ docker_ctx }}/{{item}}"
    mode: 0775
    group: docker
    recurse: yes
    state: directory
  with_items:
    - etc/osticket/db/initdb.d
    - var/backup/osticket
    - var/volumes/osticket
  when: not standalone_deployment

# Write access for group docker in  var/backup/osticket for backup_db.sh
# Write access for group docker in  etc/osticket/db/init.db for create_db_seed.sh
    
- name: Install "osticketenv.template" 
  copy:
    src: etc/osticketenv.template
    dest: "{{ docker_ctx }}/etc/osticket/env/osticketenv.template"
    mode: 0644

- name: Install "init.sql" 
  copy:
    src: etc/init.sql
    dest: "{{ docker_ctx }}/etc/osticket/db/initdb.d/init.sql"
    mode: 0644

- name: Install maintenance scripts
  template:
    src: "bin/{{ item }}"
    dest: "{{ docker_ctx }}/usr/osticket/bin/{{ item }}"
    mode: 0755
  with_items:
    - backup_db.sh       
    - restore_db.sh
    - create_db_seed.sh

- name: Install standalone maintenance scripts
  template:
    src: "bin/{{ item }}"
    dest: "{{ docker_ctx }}/usr/osticket/bin/{{ item }}"
    mode: 0755
  with_items:
    - start.sh
    - stop.sh
    - nuke_all.sh
  when: standalone_deployment

- name: Install standalone support scripts
  template:
    src: "bin/{{ item }}"
    dest: "{{ docker_ctx }}/usr/osticket/bin/{{ item }}"
    mode: 0755
  with_items:
    - log_utils
  when: standalone_deployment

- name: Setup standalone env
  copy:
    src: 'etc/env.cfg.standalone'
    dest: "{{ docker_ctx }}/etc/osticket/env/.envosticket"
    mode: 0640
  when: standalone_deployment

- name: Install "docker-compose.yml" 
  template:
    src: etc/docker-compose.yml
    dest: "{{ docker_ctx }}/etc/osticket/docker-compose.yml"
    mode: 0644

- name: Install "application.cfg" 
  template:
    src: etc/application.cfg
    dest: "{{ docker_ctx }}/etc/osticket/application.cfg"
    mode: 0644

- name: Install "proxy.conf" 
  template:
    src: etc/proxy.conf
    dest: "{{ docker_ctx }}/etc/osticket/proxy.conf"
    mode: 0644


# - name: Ensure volumes
#   file:
#     path: "{{ docker_ctx }}/var/volumes/osticket/{{item}}"
#     mode: 0755
#     recurse: yes
#     state: directory
#   with_items: "{{ docker_volumes }}"

    
